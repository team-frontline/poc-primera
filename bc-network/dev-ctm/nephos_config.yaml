core:
  # Comment out to make it work on your cluster
  cluster: minikube
  # ChartMuseum repository or directory holding charts
  chart_repo: stable
  # Directory where we hold configtx.yaml
  dir_config: ./examples/dev-ctm/config
  # Directory where we hold:
  # 1) cryptographic material
  # 2) genesis block and
  # 3) channel transaction
  dir_crypto: ./examples/dev-ctm/crypto
  # Directory where the Helm Chart values reside
  dir_values: ./examples/dev-ctm/helm_values
cas:
  ca:
    namespace: cas
    # If testing locally on Minikube, we use our own self-signed certificate's PEM
    tls_cert: ./examples/ca-nephos-local.pem
    # Alternatively, if testing on a cluster with proper DNS and cert-manager...
    # tls_cert: ./nephos/extras/Lets_Encrypt_Authority_X3.pem
ordering:
  secret_genesis: hlf--genesis
msps:
  AlphaMSP:
    ca: ca
    name: AlphaMSP
    namespace: alpha
    org_admin: alphaadmin
    # org_passwd:  # Set implicitly
    orderers:
      domain: alpha.svc.cluster.local
      nodes:
        ord1: {}
        

  BetaMSP:
    ca: ca
    name: BetaMSP
    namespace: beta
    org_admin: betaadmin
    # org_passwd:  # Set implicitly
    orderers: {}
    peers:
      domain: beta.svc.cluster.local
      nodes:
        beta-peer1: {}
        beta-peer2: {}
        beta-peer3: {}
        beta-peer4: {}
channels:
  foochannel:
    msps:
      - BetaMSP
    channel_name: foochannel
    channel_profile: "FooChannel"
    secret_channel: hlf--foochannel
# This is only used when we implement a Composer network
composer:
  name: hlc
  secret_bna: hlc--bna
  secret_connection: hlc--connection
# You can specify a particular version of a chart for each chart used, or use the latest by default
versions:
  postgresql:
  hlf-ca:
  kafka:
  hlf-ord:
  hlf-couchdb:
  hlf-peer:
  hl-composer:

